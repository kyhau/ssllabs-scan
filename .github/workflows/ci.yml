name: CI
run-name: CI @ ${{ github.ref_name }}

on:
  push:
    branches: [main, master]
    paths:
      - .github/**
      - ssllabsscan/**
      - tests/**
      - Makefile
      - poetry.lock
      - pyproject.toml
  pull_request:
    branches: [main, master]
    paths:
      - .github/**
      - ssllabsscan/**
      - tests/**
      - Makefile
      - poetry.lock
      - pyproject.toml
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  lint:
    name: Lint code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.13"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Lint YAML
        run: make lint-yaml

      - name: Lint Python
        run: make lint-python

  test:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - name: Checkout source
        uses: actions/checkout@v5

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: make install-test

      - name: Run tests with coverage
        run: make test-with-coverage

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.13'
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
